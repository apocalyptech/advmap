Bugs to fix:

 * If one of these Qt bugs ever gets fixed:
    https://bugreports.qt.io/browse/QTBUG-63322
    https://bugreports.qt.io/browse/QTBUG-63386
   ... get rid of our draw_dashed_line function and go back to
   using setDashPattern() like I'd love to be doing.

 * There's some very minor rendering oddities I'd like to get sorted out
   at some point - We improved our border strength recently, which looks
   fine, but it would be nice to figure out getting those to draw a single
   pixel wide instead of the 2 they are now.  Also, the intersections of
   each side of the rect on our GUIRoom doesn't "meet up" the way I'd 
   hope.  If you zoom in to a screenshot, you can see easily where the
   two brush strokes meet and leave a tiny gap at the corners.

Features to implement:

 * write whole group out to PNG

 * Different ways to draw nonsymmetric links (thinking "rounded" and
   "midpoint" at the least)

 * Should really draw some little icons for mouseovers, instead of just
   highlighting in green

 * Popup when LMB on a connection to edit conn attributes (should be much
   more manageable than our previous Advanced tab on Room Edit)

 * Better one-way arrows for ladder connections.  What we do right now
   is technically Good Enough, but it doesn't really look great.

 * I'd really like to start unit-testing the GUI; apparently there
   *is* a QTest class, or something, which can assist with this.

 * QInputDialog.getText() doesn't let you specify custom buttons; would
   be nice to use our standard ones with icons, so I may need to write
   my own class to do that.
 
 * User-editable keybindings.  I suspect I'd probably never get to the
   point of having a preferences menu for it, but at least having a config
   file would be nice.
 
 * For connections which end up being at least partially a straight line,
   pretend that the relevant stubs don't exist and instead draw a straight
   line all the way through.  Not that our dotted/ladder connections look
   *bad* the way they currently are, but there's a noticeable change
   between the stub area and the main connection area, when the connection
   is straight.

 * Indication of how many rooms are selected, in our secondary info area
   (until now only used for two-step actions; I don't think that we have
   any valid two-step actions while selecting, so it shouldn't get in the
   way of anything)

Things to consider:

 * Should we still be able to edit Notes in readonly mode?

 * Multiple links from the same direction
   -> Have that partially, now - can have multiple ends on the same room,
      at least.  Should we support multi-room connections?  I'm not
      sure if that'd be useful anywhere.  Presumably there's an
      Infocom title out there *somewhere* in which it would help.  The
      bank puzzle from Zork II could technically make use of such a
      construct.

 * Double-sized rooms, or even arbitrarily-large room.  Sort of a
   super-group where the room itself takes over space instead of just
   the background notification

 * Our current handling of QGraphicsScene/QGraphicsView owes a lot to how
   we were handling things back in the Gtk+ version - namely, that when
   changes occur to the data, we trigger a complete recreation of the
   entire scene, rather than try to keep track of changes.  The datasets
   involved here are small enough by modern computers that it doesn't
   really matter, but it's still pretty inefficient.  Really we should
   be just updating what's changed and keeping the rest of the scene
   intact.  That's more work than I cared to deal with, since we'd have
   a lot of QGraphics*Items lying around all over the place, but it's
   something to consider for the future.
